#################################################################################################
# to restart, use -var restart <stage> <restart_filename>
# stages:
# - 0: start at beginning
# - 1: start after NVT equilibration
# - 2: start after NVE equilibration

#variable restart index 0 'nothing'
#variable        restartAtStep equal ${restart}
#next restart
#variable        restartFileName string ${restart}
#print "Restart at step: ${restartAtStep} "
#print "Restart filename: ${restartFileName} "


variable frameworkDataFile string mof.data
variable gasDataFile string gas.data

variable simTemp equal 298
variable dt equal 1.0
units           real
atom_style      full
boundary        p p p

pair_style      lj/cut/coul/long 12.500
bond_style      harmonic
angle_style     hybrid cosine/periodic fourier harmonic
dihedral_style  harmonic
improper_style  fourier
kspace_style    ewald 0.000001

dielectric      1.0
special_bonds   lj/coul 0.0 0.0 1.0
pair_modify     tail yes mix arithmetic
box tilt        large
timestep        $(v_dt)


#if "${restartAtStep} > 0" then "read_restart    ${restartFileName}"
#if "${restartAtStep} > 0" then "jump SELF after_NPT_eq"

print "reading MOF and gas data files..."

variable mofAtoms equal 5
variable mofBonds equal 6
variable mofAngles equal 9
variable mofDihedrals equal 3
variable mofImpropers equal 1

variable atomO equal $(v_mofAtoms + 1)
variable atomC equal $(v_mofAtoms + 2)
variable bondOC equal $(v_mofBonds + 1)
variable angleOCO equal $(v_mofAngles + 1)

read_data       ${frameworkDataFile} group mof extra/atom/types 2 extra/bond/types 1 extra/angle/types 1
read_data       ${gasDataFile} group gas add append offset ${mofAtoms} ${mofBonds} ${mofAngles} ${mofDihedrals} ${mofImpropers}

print "define params for C02"
mass ${atomO}   15.999
mass ${atomC}   12.011
pair_coeff ${atomO} ${atomO} 0.156989    2.80 # C
pair_coeff ${atomC} ${atomC} 0.053655    3.05 # O
bond_coeff ${bondOC} 1029.995 1.160 # O=C
angle_coeff ${angleOCO} harmonic 56 180 # O=C=O
group gasCenters type ${atomC} # use center carbon for GK

#################################################################################################
### NPT equilibration on framework

#if "${restartAtStep} > 0" then "jump SELF after_NVT_eq"
print "** NPT EQUILIBRATION ** "

thermo_style custom step vol temp press density etotal
thermo         10000
thermo_modify  flush yes
restart        1000000 npt-eq.*.restart
dump dump1 all xyz 1000000 npt-eq.dump.*.xyz

fix INTALL all npt temp ${simTemp} ${simTemp} 50 iso 1 1 50
run           1000000
unfix         INTALL
undump dump1

label after_NPT_eq

#################################################################################################
### NVT equilibration

# dump for post verification (if necessary)
dump gaspos_dump gasCenters atom 10000 gas_coords.atoms
dump dump_velocities gasCenters custom 10000 gas_coords.txt xu yu zu vx vy vz

# VACF methodology from http://lammps.sandia.gov/doc/compute_vacf.html
compute vacfGas gasCenters vacf
fix             vacfVector all vector 10000 c_vacfGas[4]
variable        diffusivity equal v_dt*trap(f_vacfVector)
thermo_style    custom step v_diffusivity

# methodology from Hasan
# fix	       JJT all ave/correlate $s $p $d v_Jx type auto file J0Jt_t.dat ave running

# MSD methodoloy from http://lammps.sandia.gov/doc/compute_msd.html
compute msdGas gasCenters msd
fix  PE1 all ave/time 10000  1  10000 c_msdGas[1] c_msdGas[2] c_msdGas[3] c_msdGas[4] file gasMSD.txt

# methodology from Samir (for MSD and VACF)
dump trajectory_dump gas custom 10 gas.lammpstrj id type mol vx  vy  vz mass q xu yu zu

#if "${restartAtStep} > 1" then "jump SELF after_NVT_eq"
print "** NVT EQUILIBRATION ** "
thermo_style custom step vol temp press density etotal v_diffusivity
thermo         10000
thermo_modify  flush yes
restart        100000 nvt-eq.*.restart
dump XYZDUMP all xyz 100000 nvt-eq.dump.*.xyz

fix INTALL all nvt temp ${simTemp} ${simTemp} 50
run           100000
unfix INTALL
undump XYZDUMP

label after_NVT_eq

#################################################################################################
### NVE equilibration

#if "${restartAtStep} > 2" then "jump SELF after_NVE_eq"
print "** NVE EQUILIBRATION ** "
thermo_style custom step vol temp press density etotal  v_diffusivity
thermo         10000
thermo_modify  flush yes
restart        1000000 nve-eq.*.restart
dump XYZDUMP all xyz 1000000 nve-eq.dump.*.xyz

fix INTALL all nve
run 1000000
unfix INTALL

undump XYZDUMP

label after_NVE_eq



#################################################################################################
### NVE

print "** NVE RUN ** "
thermo_style custom step vol temp press density etotal  v_diffusivity
thermo         10000
thermo_modify flush yes
restart        1000000 nve.*.restart
dump XYZDUMP all xyz 1000000 nve.dump.*.xyz
fix INTALL all nve
run           4000000


##
